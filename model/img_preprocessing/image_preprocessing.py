# -*- coding: utf-8 -*-
"""Image_Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FkIciJawZW43J76Ql8qq3qbEIhCv_cdS
"""

import pandas as pd
import numpy as np

import os 
from os.path import join

base_dir = "/content/drive/MyDrive/project_share"
folder  = "imageData"
cats = ["education_images", "game_images", "kpop_images", "mukbang_images"]

for c in cats:
  vars()["path_" + c] = join(base_dir, folder, c)

root_path = join(base_dir, folder)

"""## Pytorch를 이용한 이미지 데이터 가져오기"""

from PIL import Image
import matplotlib
import matplotlib.pyplot as plt
import torch
from torch.utils.data import Dataset, DataLoader 
import torchvision
from torchvision import transforms

"""- 일부 이미지 augmentation ( GaussianBlur )"""

blur_trans = transforms.RandomApply([
  transforms.GaussianBlur(15)
],  p = 0.02)

"""- 일부 이미지 Gaussian Noise 추가하기"""

class AddGaussianNoise(object):
  def __init__(self, mean = 0.0, std = 1.0):
    self.mean = mean
    self.std = std
  
  def __call__(self, tensor):
    return tensor+torch.randn(tensor.size())*self.std+self.mean

  def __repr__(self):
    return self.__class__.__name__+'(mean={0}, std={1})'.format(self.mean, self,std)

noise_trans = transforms.RandomApply([                                   
  AddGaussianNoise()
], p = 0.02)

"""- 최종 transforms"""

fin_trans = transforms.Compose([transforms.Resize((144,256)), 
                            blur_trans,
                            noise_trans,
                            transforms.ToTensor(),
                            transforms.Normalize((0.5,0.5,0.5),(0.5,0.5,0.5))
                           ])

"""=> 이미지 전처리"""

trainset = torchvision.datasets.ImageFolder(root = root_path,
                                            transform = fin_trans)

"""### DataLoader를 통해 배치형태로 네트워크에 데이터 올리기"""

trainloader = DataLoader(trainset, 
                         batch_size = 16,
                         shuffle = True,
                         num_workers = 2)
