# -*- coding: utf-8 -*-
"""Sampling_Code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hL8b85KGeVExXhmX56FdTCXC-Y68iFz5
"""

import os
import cv2
from os.path import join
import glob

class videoFilesPath:
  # Declare video path
  def __init__(self, base_dir, cat_folder, files="*.webm"):
    self.base_path = base_dir
    self.category = cat_folder
    self.file_path = join(base_dir, cat_folder, files )

  # Bring video ids as list from the path above
  def get_video_list(self):
    videoList = glob.glob(self.file_path)
    return videoList
    

class imageSampling(videoFilesPath):
  def __init__(self, base_dir, cat_folder, files="*.webm"):
    super(imageSampling, self).__init__(base_dir, cat_folder, files = "*.webm")
  
  def get_sample_images(self, time=60): 
    ## The folder named "[category]_images" needs to be prepared
    sampling_path = join(self.base_path, self.category + '_images/')

    for index, video in enumerate(self.get_video_list()):
      cap = cv2.VideoCapture(video)

      sample_count = 0
      captured_count = 0

      while cap.isOpened():
        if not cap.isOpened():
          break

        ret, frame = cap.read()
        sample_count += 1

        if not ret:
          break
          
        if sample_count == time :
          captured_count += 1
          files_name = str(index) + '_'+ str(captured_count) +'.jpg'
          cv2.imwrite(str(sampling_path) + files_name, frame)
          sample_count = 0
          

      cap.release()

    return "Done"


